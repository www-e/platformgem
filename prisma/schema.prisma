// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

enum Grade {
  FIRST_YEAR
  SECOND_YEAR
  THIRD_YEAR
}

// -- CORE MODELS (Reduced from 8 to 4) --

model User {
  id          String @id @default(cuid())
  studentId   String @unique
  phone       String @unique
  name        String
  password    String
  parentPhone String
  grade       Grade
  isAdmin     Boolean @default(false)

  // REPLACES the Exam and ExamResult tables.
  // We store a list of exam objects directly on the user.
  // Example: [{"examTitle": "Algebra Midterm", "date": "2025-10-15", "score": 88.5}]
  examHistory Json?

  enrollments Enrollment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Course {
  id          String @id @default(cuid())
  title       String
  description String
  thumbnailUrl String
  targetGrade Grade

  lessons     Lesson[]
  enrollments Enrollment[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Enrollment {
  id              String   @id @default(cuid())
  userId          String
  courseId        String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  course          Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  
  // REPLACES the LessonProgress table. This is a huge optimization.
  // We store an array of IDs of the lessons the user has completed.
  completedLessonIds String[]

  progressPercent Int      @default(0) // We'll calculate this based on the array above
  enrolledAt      DateTime @default(now())

  @@unique([userId, courseId])
}

model Lesson {
  id           String @id @default(cuid())
  title        String
  order        Int
  bunnyVideoId String

  // REPLACES the Material table.
  // We store a list of material objects directly on the lesson.
  // Example: [{"title": "Chapter 1 Notes", "url": "..."}]
  materials Json?
  
  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  
  @@index([courseId])
}